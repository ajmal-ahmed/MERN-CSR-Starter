{"version":3,"sources":["components/cell.js","components/grid.js","components/toolbar.js","components/title.js","components/button.js","actions/user.js","containers/Header.js","containers/Footer.js","containers/Layout.js","components/card.js","components/textfield.js","pages/SignUp.js","pages/SignIn.js","pages/ForgotPassword.js","pages/ResetPassword.js","components/paper.js","pages/Home.js","App.js","reducers/index.js","store/configureStore.js","reducers/user.js","serviceWorker.js","index.js"],"names":["Cell","styled","div","width","height","left","top","center","area","middle","propTypes","className","PropTypes","string","number","oneOfType","bool","frGetter","value","Grid","flow","minRowHeight","rows","columns","gap","columnGap","rowGap","areas","map","join","formatAreas","justifyContent","alignContent","arrayOf","Container","props","color","Content","Toolbar","children","h1","Button","button","primary","setAuthToken","token","axios","defaults","headers","common","setUserData","name","type","payload","connect","store","user","dispatch","signout","localStorage","removeItem","auth","setData","history","useHistory","redirect","destination","push","onClick","Footer","style","marginTop","Layout","fullWidth","Card","TextField","input","inputColor","fullwidth","signup","data","userData","post","then","res","toast","success","setTimeout","catch","err","response","description","error","useState","first_name","setFname","last_name","setLname","email","setEmail","password","setPassword","confirm_password","setPasswordConfirmation","display","flexDirection","placeholder","onChange","event","target","validator","isEmail","length","warn","equals","as","href","signin","accessToken","setItem","forgotP","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","resetP","setConfirmPassword","search","decodeURI","location","reset_key","URLSearchParams","get","Paper","selector","sortable","console","log","employees","fetchEmployees","searchKey","setSearchKey","useEffect","padding","noHeader","defaultSortField","responsive","val","isLoggedIn","jwtToken","decoded","jwt_decode","currentTime","Date","getTime","expiry","iat","window","pathname","exact","path","component","Home","SignUp","SignIn","ForgotPassword","ResetPassword","newestOnTop","rtl","pauseOnFocusLoss","combineReducers","middleware","state","action","process","applyMiddleware","promise","thunk","createLogger","createStore","reducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4d62914.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Cell = styled.div`\n  height: 100%;\n  min-width: 0;\n  grid-column-end: ${({ width = 1 }) => `span ${width}`};\n  grid-row-end: ${({ height = 1 }) => `span ${height}`};\n  ${({ left }) => left && `grid-column-start: ${left}`};\n  ${({ top }) => top && `grid-row-start: ${top}`};\n  ${({ center }) => center && `text-align: center`};\n  ${({ area }) => area && `grid-area: ${area}`};\n  ${/* prettier-ignore */\n    ({ middle }) => middle && `\n    display: inline-flex;\n    flex-flow: column wrap;\n    justify-content: center;\n    justify-self: stretch;\n  `};\n`;\n\nCell.propTypes = {\n    className: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    top: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    left: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    middle: PropTypes.bool,\n    center: PropTypes.bool,\n    area: PropTypes.string\n};\n\nexport default Cell;","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst autoRows = ({ minRowHeight = \"20px\" }) => `minmax(${minRowHeight}, auto)`;\n\nconst frGetter = value =>\n    typeof value === \"number\" ? `repeat(${value}, 1fr)` : value;\n\nconst gap = ({ gap = \"8px\" }) => gap;\n\nconst flow = ({ flow = \"row\" }) => flow;\n\nconst formatAreas = areas => areas.map(area => `\"${area}\"`).join(\" \");\n\nconst Grid = styled.div`\n  display: grid;\n  height: ${({ height = \"auto\" }) => height};\n  grid-auto-flow: ${flow};\n  grid-auto-rows: ${autoRows};\n  ${({ rows }) => rows && `grid-template-rows: ${frGetter(rows)}`};\n  grid-template-columns: ${({ columns = 12 }) => frGetter(columns)};\n  grid-gap: ${gap};\n  ${({ columnGap }) => columnGap && `column-gap: ${columnGap}`};\n  ${({ rowGap }) => rowGap && `row-gap: ${rowGap}`};\n  ${({ areas }) => areas && `grid-template-areas: ${formatAreas(areas)}`};\n  ${({ justifyContent }) =>\n        justifyContent && `justify-content: ${justifyContent}`};\n  ${({ alignContent }) => alignContent && `align-content: ${alignContent}`};\n`;\n\nGrid.propTypes = {\n    className: PropTypes.string,\n    columns: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    gap: PropTypes.string,\n    columnGap: PropTypes.string,\n    rowGap: PropTypes.string,\n    height: PropTypes.string,\n    minRowHeight: PropTypes.string,\n    flow: PropTypes.string,\n    rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    areas: PropTypes.arrayOf(PropTypes.string),\n    justifyContent: PropTypes.string,\n    alignContent: PropTypes.string\n};\n\nexport default Grid;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\noverflow: hidden;\npadding: 10px;\nmargin: 0px auto 0;\nwidth: auto;\nmin-height:50px;\nfont-family: Quicksand, arial, sans-serif;\nbox-shadow: 0 0 10px rgba(0, 0, 0, .05), 0 0px 10px rgba(0, 0, 0, .08);\nborder-radius: 5px;\n  color: ${props => props.color};\n`;\n\nconst Content = styled.div`\n  align-self: center;\n`;\n\nconst Toolbar = ({ children, color = '#ff867c' }) => (\n    <Container color={color}>\n        <Content>\n            {children}\n        </Content>\n    </Container>\n);\n\nexport default Toolbar;","import styled from 'styled-components';\n\n// Create a <Title> react component that\n// renders an <h1> which is centered, palevioletred and sized at 1.5em\nexport default styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: ${props => props.color ? props.color : \"#424242\"};\n`;","import styled from 'styled-components';\n\nconst Button = styled.button`\n  /* Adapt the colors based on primary prop*/\n  background: ${(props) =>\n    props.primary ? '#ff867c' : 'white'\n  };\n  color: ${(props) =>\n    props.primary ? 'white' : 'palevioletred'\n  };\n\n  font-size: 14px;\n    padding: 6px 12px;\n    margin: 20px auto 10px;\n    width: ${props => props.width ? props.width : \"100px\"};\n    display: inline-block;\n    text-decoration: none;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    background-image: none;\n    border: 1px solid transparent;\n    border-radius: 3px;\n`;\n\nexport default Button;","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\"\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport function setUserData(name, value) {\r\n  return {\r\n    type: SET_USER_DATA,\r\n    payload: { [name]: value },\r\n  };\r\n}\r\n\r\n// Register User\r\nexport const registerUser = (userData) => dispatch => {\r\n  axios\r\n    .post(\"/api/auth/sign-up\", userData)\r\n    .then(res => {\r\n      toast.success(\"Registered successfully\")\r\n      setTimeout(() => {\r\n        dispatch(setUserData('redirect', '/'));\r\n      }, 2000);\r\n\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: SET_USER_DATA,\r\n        payload: err.response.data\r\n      })\r\n      if (err.response.data.description) {\r\n        toast.error(err.response.data.description);\r\n      }\r\n    }\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/auth/token\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { accessToken } = res.data;\r\n      localStorage.setItem(\"jwtToken\", accessToken);\r\n      // Set token to Auth header\r\n      setAuthToken(accessToken);\r\n      // Set current user as authenticated\r\n      dispatch(setUserData('redirect', '/'))\r\n      dispatch(setUserData('auth', true));\r\n      toast.success(\"Logged\")\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: SET_USER_DATA,\r\n        payload: err.response.data\r\n      })\r\n      if (err.response.data.description) {\r\n        toast.error(err.response.data.description);\r\n      }\r\n    }\r\n    );\r\n}\r\n\r\nexport const forgotPassword = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/auth/forgot-password\", userData)\r\n    .then(res => {\r\n      if (res.data && res.data.message) {\r\n        toast.success(res.data.message, {\r\n          position: \"top-center\",\r\n          autoClose: 8000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n      }\r\n\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: SET_USER_DATA,\r\n        payload: err.response.data\r\n      })\r\n      if (err.response.data.description) {\r\n        toast.error(err.response.data.description);\r\n      }\r\n    }\r\n    );\r\n}\r\n\r\nexport const resetPassword = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/auth/reset-password\", userData)\r\n    .then(res => {\r\n      if (res.data && res.data.message) {\r\n        toast.success(res.data.message, {\r\n          position: \"top-center\",\r\n          autoClose: 8000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n      }\r\n      setTimeout(() => {\r\n        dispatch(setUserData('redirect', '/'));\r\n      }, 2000);\r\n    })\r\n    .catch(err => {\r\n      toast.error(\"Invalid Credentials\");\r\n    }\r\n    );\r\n}\r\n\r\nexport const fetchEmployees = search => dispatch => {\r\n  axios\r\n    .post(\"/api/employees/list\", { search })\r\n    .then(res => {\r\n      console.log(\"res,\", res)\r\n      if (res.data && res.data.employees) {\r\n        dispatch(setUserData('employees', res.data.employees));\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(\"err,\", err)\r\n      // toast.error(\"Invalid Credentials\");\r\n    }\r\n    );\r\n}\r\n\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch({\r\n    type: SET_USER_DATA, payload: { auth: false }\r\n  });\r\n}","import React from \"react\"\nimport Grid from \"../components/grid\"\nimport Cell from \"../components/cell\"\nimport Toolbar from \"../components/toolbar\"\nimport Title from \"../components/title\"\nimport Button from \"../components/button\"\nimport { connect } from \"react-redux\";\nimport { logoutUser, setUserData } from \"../actions/user\"\nimport { useHistory } from 'react-router-dom';\n\n\nfunction Header(props) {\n    const history = useHistory();\n    const logout = () => {\n        props.signout();\n        history.push('/sign-in')\n    }\n    if (props.user.redirect) {\n        let destination = props.user.redirect;\n        props.setData('redirect', null);\n        history.push(destination)\n    }\n    return (<>\n        <Toolbar>\n            <Grid columns={\"100px 1fr 100px\"}\n                rows={\"minmax(10px,auto)\"}>\n                <Cell ><Title>Company</Title></Cell>\n                <Cell left={3} middle>\n                    {props.user.auth ? <Button onClick={logout} >logout</Button> : null}\n                </Cell>\n            </Grid>\n        </Toolbar>\n    </>)\n}\n\nconst mapStoreToProps = store => ({\n    user: store.user\n})\n\nconst mapDispatchToProps = dispatch => ({\n    signout: () => dispatch(logoutUser()),\n    setData: (name, value) => dispatch(setUserData(name, value))\n})\n\nexport default connect(mapStoreToProps, mapDispatchToProps)(Header)","import React from \"react\"\nfunction Footer() {\n    return (<>\n        <footer>\n            <div style={{ marginTop: 50 }}>\n                <center><code>Copyright © Company Inc.</code></center>\n            </div>\n        </footer>\n    </>)\n}\nexport default Footer","import React from \"react\"\nimport Cell from \"../components/cell\"\nimport Header from \"./Header\"\nimport Footer from \"./Footer\"\nfunction Layout(props) {\n    return (<>\n        <Header />\n        <Cell>{props.children}</Cell>\n        <Footer />\n\n    </>)\n}\n\nexport default Layout","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\noverflow: hidden;\npadding: 10px 10px 32px;\nmargin: 48px auto 0;\nwidth: ${props => props.width ? props.width : \"auto\"};\nmax-width: ${props => props.fullWidth ? props.fullWidth : \"400px\"};\nfont-family: Quicksand, arial, sans-serif;\nbox-shadow: 0 0 20px rgba(0, 0, 0, .05), 0 0px 40px rgba(0, 0, 0, .08);\nborder-radius: 5px;\n  color: ${props => props.color};\n`;\n\nconst Content = styled.div`\n  align-self: center;\n  width:auto;\n`;\n\nconst Card = ({ children, color = '#ff867c' }) => (\n  <Container color={color}>\n    <Content>\n      {children}\n    </Content>\n  </Container>\n);\n\nexport default Card;","import styled from \"styled-components\";\n\nconst TextField = styled.input`\n  padding: 0.5em;\n  margin: 0.5em auto;\n  height:2em;\n  color: ${props => props.inputColor || \"palevioletred\"};\n  width: ${props => props.fullwidth ? \"100%\" : \"250px\"};\n  \n  background: papayawhip;\n  border: none;\n  border-radius: 3px;\n`;\nexport default TextField","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\";\nimport Card from \"../components/card\"\nimport Button from \"../components/button\"\nimport Cell from \"../components/cell\"\nimport TextField from \"../components/textfield\"\nimport { registerUser } from \"../actions/user\"\nimport validator from \"validator\";\nimport { toast } from \"react-toastify\";\nfunction SignUp(props) {\n    const [first_name, setFname] = useState('');\n    const [last_name, setLname] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirm_password, setPasswordConfirmation] = useState('');\n    const submit = () => {\n        if (!validator.isEmail(email)) {\n            toast.warn(\"Please use valid email\")\n            return\n        }\n        if (!(first_name && last_name && password && confirm_password)) {\n            toast.warn(\"Please fill all fields\")\n            return\n        }\n        if (password.length < 8) {\n            toast.warn(\"Passwords should be at least 8 characters\")\n            return\n        }\n        if (!validator.equals(password, confirm_password)) {\n            toast.warn(\"Passwords doesn't match\")\n            return\n        }\n        props.signup({ first_name, last_name, email, password, confirm_password })\n    }\n    return (<>\n        <div>\n            <Card >\n                <Cell style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <center><h3>Sign Up</h3></center>\n                    <TextField type=\"text\" placeholder=\"first name\" onChange={event => setFname(event.target.value)} />\n                    <TextField type=\"text\" placeholder=\"last name\" onChange={event => setLname(event.target.value)} />\n                    <TextField type=\"text\" placeholder=\"email\" onChange={event => setEmail(event.target.value)} />\n                    <TextField type=\"password\" placeholder=\"password\" onChange={event => setPassword(event.target.value)} />\n                    <TextField type=\"password\" placeholder=\"confirm password\" onChange={event => setPasswordConfirmation(event.target.value)} />\n                    <Button primary onClick={submit}>Sign Up</Button>\n                    <Button as=\"a\" href=\"/sign-in\">Sign In</Button>\n                </Cell>\n            </Card>\n        </div>\n    </>)\n}\n\n\nconst mapStoreToProps = store => ({\n    user: store.user\n})\n\nconst mapDispatchToProps = dispatch => ({\n    signup: (data) => dispatch(registerUser(data))\n})\n\nexport default connect(mapStoreToProps, mapDispatchToProps)(SignUp)","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../actions/user\"\nimport Card from \"../components/card\"\nimport Grid from \"../components/grid\"\nimport Button from \"../components/button\"\nimport Cell from \"../components/cell\"\nimport TextField from \"../components/textfield\"\nimport validator from \"validator\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from 'react-router-dom';\nfunction SignIn(props) {\n    const history = useHistory();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const submit = () => {\n        if (!validator.isEmail(email)) {\n            toast.warn(\"Please use valid email\")\n            return\n        }\n        if (!password) {\n            toast.warn(\"Please fill all fields\")\n            return\n        }\n        props.signin({ email, password })\n    }\n    if (props.user.auth) {\n        history.push('/')\n    }\n    return (<>\n        <div>\n            <Card >\n                <Cell style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <center><h3>Sign In</h3></center>\n                    <TextField type=\"text\" placeholder=\"email\" onChange={event => setEmail(event.target.value)} />\n                    <TextField type=\"password\" placeholder=\"password\" onChange={event => setPassword(event.target.value)} />\n                    <Button primary onClick={submit}>SignIn</Button>\n                    <Grid columns={1}>\n                        <Cell center middle>\n                            <Button as=\"a\" href=\"/forgot-password\" style={{ marginTop: 0 }}>Forgot password?</Button>\n                        </Cell>\n                        <Cell center middle>\n                            <Button as=\"a\" href=\"/sign-up\" style={{ marginTop: -25 }}>Sign Up</Button>\n                        </Cell>\n                    </Grid>\n                </Cell>\n            </Card>\n        </div>\n    </>)\n}\n\n\n// export default SignIn\n\nconst mapStoreToProps = store => ({\n    user: store.user\n})\n\nconst mapDispatchToProps = dispatch => ({\n    signin: (data) => dispatch(loginUser(data))\n})\n\nexport default connect(mapStoreToProps, mapDispatchToProps)(SignIn)","import React, { useState } from \"react\"\nimport Card from \"../components/card\"\nimport Button from \"../components/button\"\nimport Cell from \"../components/cell\"\nimport TextField from \"../components/textfield\"\nimport validator from \"validator\";\nimport { toast } from \"react-toastify\";\nimport { connect } from \"react-redux\";\nimport { forgotPassword } from \"../actions/user\"\n\nfunction ForgotPassword(props) {\n    const [email, setEmail] = useState('');\n    const submit = () => {\n        if (!validator.isEmail(email)) {\n            toast.warn(\"Please use valid email\")\n            return\n        }\n        props.forgotP({ email })\n    }\n    return (<>\n        <div>\n            <Card >\n                <Cell style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <center><h3>Reset your password</h3></center>\n                    <center><h6>Enter your user account's verified email address and we will send you a password reset link.</h6></center>\n                    <TextField type=\"text\" placeholder=\"Enter your email address\" onChange={event => setEmail(event.target.value)} />\n                    <Button primary width=\"auto\" onClick={submit} >Send password reset email</Button>\n                    <Button as=\"a\" href=\"/sign-in\">Sign In</Button>\n                </Cell>\n            </Card>\n        </div>\n    </>)\n}\n\n\n\nconst mapStoreToProps = store => ({\n    user: store.user\n})\n\nconst mapDispatchToProps = dispatch => ({\n    forgotP: (data) => dispatch(forgotPassword(data))\n})\n\nexport default connect(mapStoreToProps, mapDispatchToProps)(ForgotPassword)","import React, { useState } from 'react';\nimport Card from \"../components/card\"\nimport Button from \"../components/button\"\nimport Cell from \"../components/cell\"\nimport TextField from \"../components/textfield\"\nimport { toast } from \"react-toastify\";\nimport { connect } from \"react-redux\";\nimport validator from \"validator\";\n\nimport { resetPassword } from \"../actions/user\"\n\nfunction ResetPassword(props) {\n    const [confirm_password, setConfirmPassword] = useState('');\n    const [password, setPassword] = useState('');\n    var search = decodeURI(props.location.search)\n    const params = new URLSearchParams(search);\n    var reset_key = params.get('auth');\n    const submit = () => {\n        if (!(password && confirm_password)) {\n            toast.warn(\"Please fill all fields\")\n            return\n        }\n        if (password.length < 8) {\n            toast.warn(\"Passwords should be at least 8 characters\")\n            return\n        }\n        if (!validator.equals(password, confirm_password)) {\n            toast.warn(\"Passwords doesn't match\")\n            return\n        }\n\n        props.resetP({ reset_key, password, confirm_password })\n    }\n    if (!reset_key) {\n        return (<div>\n            <Card >\n                <Cell style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <center><h3>404</h3></center>\n                    <Button primary width=\"auto\" as=\"a\" href=\"/\">Home</Button>\n                </Cell>\n            </Card>\n        </div>)\n    }\n    return (<>\n        <div>\n            <Card >\n                <Cell style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <center><h3>Change your password</h3></center>\n                    <center><h6>Make sure it's at least 8 characters</h6></center>\n                    <TextField type=\"password\" placeholder=\"password\" onChange={event => setPassword(event.target.value)} />\n                    <TextField type=\"password\" placeholder=\"confirm password\" onChange={event => setConfirmPassword(event.target.value)} />\n                    <Button primary width=\"auto\" onClick={submit}>Change password</Button>\n                </Cell>\n            </Card>\n        </div>\n    </>)\n}\n\n\n\nconst mapStoreToProps = store => ({\n    user: store.user\n})\n\nconst mapDispatchToProps = dispatch => ({\n    resetP: (data) => dispatch(resetPassword(data))\n})\n\nexport default connect(mapStoreToProps, mapDispatchToProps)(ResetPassword)","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\noverflow: hidden;\npadding: 10px 10px 32px;\nmargin: 48px auto 0;\nwidth: ${props => props.width ? props.width : \"auto\"};\nfont-family: Quicksand, arial, sans-serif;\nbox-shadow: 0 0 20px rgba(0,0,0,.05), 0 0px 5px rgba(0,0,0,.08);\nborder-radius: 5px;\n  color: ${props => props.color};\n`;\n\nconst Content = styled.div`\n  align-self: center;\n  width:auto;\n`;\n\nconst Paper = ({ children, color = '#ff867c' }) => (\n    <Container color={color}>\n        <Content>\n            {children}\n        </Content>\n    </Container>\n);\n\nexport default Paper;","import React, { useEffect, useState } from \"react\"\nimport DataTable from 'react-data-table-component';\nimport Paper from \"../components/paper\"\nimport TextField from \"../components/textfield\"\nimport { toast } from \"react-toastify\";\nimport { connect } from \"react-redux\";\nimport { fetchEmployees } from \"../actions/user\"\n\nconst columns = [\n    {\n        name: 'Name',\n        selector: 'name',\n        sortable: true,\n    },\n    {\n        name: 'Position',\n        selector: 'position',\n        sortable: true,\n    },\n    {\n        name: 'Email',\n        selector: 'email',\n        sortable: true,\n    },\n];\n\n\nfunction Home(props) {\n    const [searchKey, setSearchKey] = useState('');\n    const loadBlogs = () => {\n        props.search(searchKey)\n    }\n    useEffect(loadBlogs, [searchKey]);\n    return (<>\n        <div style={{ padding: 10 }}>\n            <Paper>\n                <TextField placeholder=\"search\" onChange={event => setSearchKey(event.target.value)} />\n                <DataTable\n                    // title=\"Movie List\"\n                    noHeader={true}\n                    columns={columns}\n                    data={props.user.employees ? props.user.employees : []}\n                    defaultSortField=\"title\"\n                    responsive={true}\n                />\n            </Paper>\n        </div>\n    </>)\n}\n\n\nconst mapStoreToProps = store => ({\n    user: store.user\n})\n\nconst mapDispatchToProps = dispatch => ({\n    search: (search) => dispatch(fetchEmployees(search))\n})\n\nexport default connect(mapStoreToProps, mapDispatchToProps)(Home)","import React from 'react';\nimport Layout from \"./containers/Layout\"\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport SignUp from \"./pages/SignUp\"\nimport SignIn from \"./pages/SignIn\"\nimport ForgotPassword from \"./pages/ForgotPassword\"\nimport ResetPassword from \"./pages/ResetPassword\"\nimport Home from \"./pages/Home\"\nimport { connect } from \"react-redux\";\nimport { setUserData } from \"./actions/user\"\nfunction App(props) {\n  let isLoggedIn = false;\n  if (localStorage.jwtToken) {\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    // setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    // store.dispatch(setCurrentUser(decoded));\n    // Check for expired token\n    let currentTime = new Date().getTime();\n    let expiry = new Date(decoded.iat).getTime();\n    expiry += 1000 * 60 * 59//expires by an hour\n    if (expiry < currentTime) {\n      // Logout user\n      // store.dispatch(logoutUser());\n\n      // Redirect to login\n      window.location.href = \"./sign-in\";\n    }\n    if (!props.user.auth) {\n      props.setData(\"auth\", true)\n    }\n    isLoggedIn = true;\n  } else {\n    // console.log(\"path\", window.location.pathname)\n    if (window.location.pathname === \"/\") {\n      window.location.href = \"./sign-in\";\n      return null;\n    }\n\n  }\n  if (isLoggedIn) {\n    return <Router><Layout ><Home /></Layout></Router>\n  }\n\n  return (\n    <>\n      <Router>\n        <Layout >\n          <Switch >\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/sign-up\" component={SignUp} />\n            <Route exact path=\"/sign-in\" component={SignIn} />\n            <Route exact path=\"/forgot-password\" component={ForgotPassword} />\n            <Route exact path=\"/resetpassword\" component={ResetPassword} />\n          </Switch>\n        </Layout>\n      </Router>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n}\n\nconst mapStoreToProps = store => ({\n  user: store.user\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setData: (name, val) => dispatch(setUserData(name, val))\n})\n\nexport default connect(mapStoreToProps, mapDispatchToProps)(App)","import { combineReducers } from \"redux\";\r\nimport user from \"./user\";\r\n\r\nexport default combineReducers({ user });\r\n","import { applyMiddleware, createStore } from \"redux\";\r\n\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport promise from \"redux-promise-middleware\";\r\n\r\nimport reducer from \"../reducers\";\r\n\r\nlet middleware;\r\n\r\nif (process.env === \"production\") {\r\n  middleware = applyMiddleware(promise, thunk);\r\n} else {\r\n  middleware = applyMiddleware(promise, createLogger(), thunk);\r\n}\r\n\r\nexport default createStore(reducer, middleware);\r\n","export default function reducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"SET_USER_DATA\": {\r\n      return { ...state, ...action.payload };\r\n    }\r\n\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n\r\n  //\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}